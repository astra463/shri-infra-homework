name: Deploy Release to Prod

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., 1.0.0)'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: SSH and deploy to prod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_PUBLIC_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Logging in to Yandex Container Registry"
            echo "${{ secrets.YANDEX_OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

            # Pull the Docker image
            docker pull cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

            # Stop and remove the existing container if it exists
            docker stop app || true
            docker rm app || true

            # Run the new container
            docker run -d --name app cr.yandex/${{ secrets.YANDEX_CONTAINER_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

            # Execute npm commands inside the running container
            docker exec -it app sh -c "npm install && npm run build:docker && npm run start:docker"

      - name: Create issue content file
        run: |
          echo "**Release v${{ github.event.inputs.release_version }} deployed to production**" > ./deploy_issue_content.md
          echo "**Date**: $(date +%Y-%m-%d)" >> ./deploy_issue_content.md
          echo "**Author**: ${{ github.actor }}" >> ./deploy_issue_content.md

      - name: Add comment to GitHub Issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Release ${{ github.event.inputs.release_version }} Deployed to Prod
          content-filepath: ./deploy_issue_content.md
